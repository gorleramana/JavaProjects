<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>

	<bean id="triangle" class="org.javabrains.spring.beans.practice.SetterInjection">
		<!-- setter injection -->
		<property name="type" value="Equilateral"></property>
	</bean>

	<bean id="triangle2"
		class="org.javabrains.spring.beans.practice.ConstructorInjection">
		<!-- constructor injection -->
		<!-- <constructor-arg value="Equilateral"></constructor-arg> -->
		<!-- Spring automatically takes the right constructor to assign this value, 
			but if there are two single param constructors (one with int, and one with 
			string), it'll get confused so we need to mention type here -->
		<!-- <constructor-arg type="int" value="20"></constructor-arg> -->

		<!-- Third way of doing it, mention indexes, so that spring will look for 
			the constructor with index 0 as first argument and index 1 as second argument 
			and then intializes the bean -->
		<constructor-arg index="0" value="Equilateral"></constructor-arg>
		<constructor-arg index="1" value="20"></constructor-arg>
	</bean>

	<!-- injecting objects -->
	<bean id="triangle3" class="org.javabrains.spring.beans.practice.InjectingObjects">
		<property name="pointA" ref="point1"></property>
		<property name="pointB" ref="point2"></property>
		<property name="pointC" ref="point3"></property>
	</bean>
	<bean id="point1" class="org.javabrains.spring.beans.practice.Point">
		<property name="x" value="0"></property>
		<property name="y" value="0"></property>
	</bean>
	<bean id="point2" class="org.javabrains.spring.beans.practice.Point">
		<property name="x" value="-20"></property>
		<property name="y" value="0"></property>
	</bean>
	<bean id="point3" class="org.javabrains.spring.beans.practice.Point">
		<property name="x" value="20"></property>
		<property name="y" value="0"></property>
	</bean>

	<!-- inner beans, aliases, idref -->
	<bean id="triangle4" class="org.javabrains.spring.beans.practice.InnerBeans"
		name="triangle4-name">
		<property name="pointA" ref="point10"></property>
		<!-- or -->
		<!-- <property name="pointA"> <idref bean="point10"/> </property> -->

		<property name="pointB">
			<bean id="point20" class="org.javabrains.spring.beans.practice.Point">
				<property name="x" value="-20"></property>
				<property name="y" value="0"></property>
			</bean>
		</property>
		<property name="pointC">
			<bean id="point30" class="org.javabrains.spring.beans.practice.Point">
				<property name="x" value="20"></property>
				<property name="y" value="0"></property>
			</bean>
		</property>
	</bean>
	<bean id="point10" class="org.javabrains.spring.beans.practice.Point">
		<property name="x" value="0"></property>
		<property name="y" value="0"></property>
	</bean>

	<alias name="triangle4" alias="triangle4-alias" />

	<!-- initializing collections -->
	<bean id="triangle5"
		class="org.javabrains.spring.beans.practice.InitializingCollections">
		<property name="points">
			<list>
				<ref bean="point100"></ref>
				<ref bean="point200"></ref>
				<ref bean="point300"></ref>
			</list>
		</property>
	</bean>
	<bean id="point100" class="org.javabrains.spring.beans.practice.Point">
		<property name="x" value="0"></property>
		<property name="y" value="0"></property>
	</bean>
	<bean id="point200" class="org.javabrains.spring.beans.practice.Point">
		<property name="x" value="-20"></property>
		<property name="y" value="0"></property>
	</bean>
	<bean id="point300" class="org.javabrains.spring.beans.practice.Point">
		<property name="x" value="20"></property>
		<property name="y" value="0"></property>
	</bean>

	<!-- Autowire beans -->
	<bean id="triangle6" class="org.javabrains.spring.beans.practice.BeanAutowiring"
		autowire="byName">
	</bean>
	
	<!-- Type will work only when there is one single type (here we have 3 points, so it won't) -->
	<!-- <bean id="triangle6" class="org.javabrains.spring.beans.practice.BeanAutowiring"
		autowire="byType">
	</bean> -->
	
	<bean id="pointA" class="org.javabrains.spring.beans.practice.Point">
		<property name="x" value="0"></property>
		<property name="y" value="0"></property>
	</bean>
	<bean id="pointB" class="org.javabrains.spring.beans.practice.Point">
		<property name="x" value="-20"></property>
		<property name="y" value="0"></property>
	</bean>
	<bean id="pointC" class="org.javabrains.spring.beans.practice.Point">
		<property name="x" value="20"></property>
		<property name="y" value="0"></property>
	</bean>
</beans> 